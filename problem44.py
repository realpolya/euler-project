'''
Pentagon Numbers

Pentagonal numbers are generated by the formula, P_n=n(3n-1)/2. The first ten pentagonal numbers are:
1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
It can be seen that P_4 + P_7 = 22 + 70 = 92 = P_8. 
However, their difference, 70 - 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, P_j and P_k, for
which their sum and difference are pentagonal 
and D = |P_k - P_j| is minimised; 
what is the value of D?

'''

import math
from extras.utils import is_pentagonal


def pentagon_pair():

    # formula n * (3n - 1) / 2
    found = False
    d = 0

    pentagonal_nums = []
    n = 1

    while not found:

        p = int((n * (3 * n - 1)) / 2)
        pentagonal_nums.append(p)

        for num in pentagonal_nums:

            sum = int(p + num)
            if is_pentagonal(sum):

                diff = int(p - num)
                if is_pentagonal(diff):

                    d = diff
                    found = True
        
        n += 1

    return d


print("Answer to problem 44: ", pentagon_pair())